{"ast":null,"code":"var _jsxFileName = \"E:\\\\React FWD\\\\React Fundamentals\\\\react-bookstore\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Bookshelf from \"./components/Bookshelf\";\nimport Book from \"./components/Book\";\nimport * as BookAPI from \"./BooksAPI\";\n/**\r\n * #When?\r\n * - when selecting a shelf\r\n *\r\n * #How?\r\n * MoveBook\r\n * 1- take book from one shelf (delete)\r\n * 2- move it to another shelf (append/push)\r\n * ---------------------\r\n * variables:\r\n * - book (?)\r\n * - current shelf\r\n * - new shelf\r\n * --------------------\r\n * code:\r\n * 1- read variables [/]\r\n * 1- push in the new shelf\r\n *\r\n *\r\n * --------------------\r\n * setup\r\n *   const changeShelf = () => {};\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // read state => variable\n  const ar = [{\n    name: \"ahmed\",\n    array: [5, 6, 8, 9]\n  }, {\n    name: \"mhmd\",\n    array: [5, 6, 8, 9]\n  }, {\n    name: \"eid\",\n    array: [5, 6, 8, 9]\n  }, {\n    name: \"ali\",\n    array: [5, 6, 8, 9]\n  }]; // replace with state\n  // console.log(\"before\")\n  // console.log(ar)\n\n  setTimeout(() => {\n    console.log(ar.find(item => {\n      return item.name === \"mhmd\";\n    }).array.push(10)); // console.log(\"after\")\n    // console.log(ar)\n  }, 3000); // set state => variable => ar\n\n  const [bookshelf, setbookshelf] = useState([]);\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [shelfArr, setshelfArr] = useState([]);\n  const [searchArr, setSearchArr] = useState([]);\n  const [fetch, setFetch] = useState(true);\n\n  const changeShelf = () => {\n    setFetch(true);\n  };\n\n  function handleChange(e) {\n    const inputValu = e.target.value;\n    BookAPI.search(inputValu, 30).then(books => {});\n  } // useEffect\n\n\n  useEffect(() => {\n    /**\r\n     * if fetch is required\r\n     */\n    // run something in the lifecycle\n    if (fetch) {\n      BookAPI.getAll().then(books => {\n        // books\n        // inside this => access books\n        setbookshelf(books); // console.log(books[0].shelf);\n\n        bookArrRefactor(books);\n        setFetch(false);\n      });\n    }\n  }, [fetch]);\n\n  const bookArrRefactor = booksArray => {\n    const array1 = [];\n    const array2 = [];\n    const array3 = [];\n    booksArray.forEach(dist);\n\n    function dist(item) {\n      const shelf = item.shelf; // console.log(shelf);\n\n      if (shelf === \"currentlyReading\") {\n        array1.push(item);\n      } else if (shelf === \"wantToRead\") {\n        array2.push(item);\n      } else {\n        array3.push(item);\n      }\n    }\n\n    const newShelfArr = [{\n      title: \"Currently Reading\",\n      array: array1\n    }, {\n      title: \"Want to Read\",\n      array: array2\n    }, {\n      title: \"Read\",\n      array: array3\n    }];\n    setshelfArr(newShelfArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: searchArr.map(shelf => {\n            return /*#__PURE__*/_jsxDEV(\"i\", {\n              children: /*#__PURE__*/_jsxDEV(Book, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"My Reads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: shelfArr.length > 0 && shelfArr.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: item.title,\n            bookArr: item.array,\n            onChangeShelf: changeShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)\n        }, `${idx}-${item.title}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5E9zQZvW9wg4tX1rrQZqKHRZ7UY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React FWD/React Fundamentals/react-bookstore/src/App.js"],"names":["useEffect","useState","Header","Bookshelf","Book","BookAPI","App","ar","name","array","setTimeout","console","log","find","item","push","bookshelf","setbookshelf","showSearchPage","setShowSearchpage","shelfArr","setshelfArr","searchArr","setSearchArr","fetch","setFetch","changeShelf","handleChange","e","inputValu","target","value","search","then","books","getAll","bookArrRefactor","booksArray","array1","array2","array3","forEach","dist","shelf","newShelfArr","title","map","length","idx"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,EAAE,GAAG,CACT;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAxB,GADS,EAET;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAvB,GAFS,EAGT;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAtB,GAHS,EAIT;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAtB,GAJS,CAAX,CAFa,CAOV;AACH;AACA;;AACAC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,OAAO,CAACC,GAAR,CACEL,EAAE,CACCM,IADH,CACSC,IAAD,IAAU;AACd,aAAOA,IAAI,CAACN,IAAL,KAAc,MAArB;AACD,KAHH,EAIGC,KAJH,CAISM,IAJT,CAIc,EAJd,CADF,EADe,CAQf;AACA;AACD,GAVS,EAUP,IAVO,CAAV,CAVa,CAqBb;;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMyB,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAMC,SAAS,GAAID,CAAC,CAACE,MAAF,CAASC,KAA5B;AAEA1B,IAAAA,OAAO,CAAC2B,MAAR,CAAeH,SAAf,EAAyB,EAAzB,EAA6BI,IAA7B,CAAmCC,KAAD,IAAW,CAI5C,CAJD;AAKD,GA1CY,CA8Cb;;;AACAlC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI;AACA,QAAIwB,KAAJ,EAAW;AACTnB,MAAAA,OAAO,CAAC8B,MAAR,GAAiBF,IAAjB,CAAuBC,KAAD,IAAW;AAC/B;AACA;AACAjB,QAAAA,YAAY,CAACiB,KAAD,CAAZ,CAH+B,CAI/B;;AACAE,QAAAA,eAAe,CAACF,KAAD,CAAf;AACAT,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,OAPD;AAQD;AACF,GAfQ,EAeN,CAACD,KAAD,CAfM,CAAT;;AAiBA,QAAMY,eAAe,GAAIC,UAAD,IAAgB;AACtC,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;AAEAH,IAAAA,UAAU,CAACI,OAAX,CAAmBC,IAAnB;;AACA,aAASA,IAAT,CAAc5B,IAAd,EAAoB;AAClB,YAAM6B,KAAK,GAAG7B,IAAI,CAAC6B,KAAnB,CADkB,CAElB;;AACA,UAAIA,KAAK,KAAK,kBAAd,EAAkC;AAChCL,QAAAA,MAAM,CAACvB,IAAP,CAAYD,IAAZ;AACD,OAFD,MAEO,IAAI6B,KAAK,KAAK,YAAd,EAA4B;AACjCJ,QAAAA,MAAM,CAACxB,IAAP,CAAYD,IAAZ;AACD,OAFM,MAEA;AACL0B,QAAAA,MAAM,CAACzB,IAAP,CAAYD,IAAZ;AACD;AACF;;AACD,UAAM8B,WAAW,GAAG,CAClB;AAAEC,MAAAA,KAAK,EAAE,mBAAT;AAA8BpC,MAAAA,KAAK,EAAE6B;AAArC,KADkB,EAElB;AAAEO,MAAAA,KAAK,EAAE,cAAT;AAAyBpC,MAAAA,KAAK,EAAE8B;AAAhC,KAFkB,EAGlB;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBpC,MAAAA,KAAK,EAAE+B;AAAxB,KAHkB,CAApB;AAKAnB,IAAAA,WAAW,CAACuB,WAAD,CAAX;AACD,GAvBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACG1B,cAAc,gBACb;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,CAACD,cAAF,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,kCAFd;AAGE,YAAA,QAAQ,EAAES;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACGL,SAAS,CAACwB,GAAV,CAAeH,KAAD,IAAW;AACxB,gCAAQ;AAAA,qCAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAAR;AAAwB,WADzB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,gBAyBb;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACGvB,QAAQ,CAAC2B,MAAT,GAAkB,CAAlB,IACC3B,QAAQ,CAAC0B,GAAT,CAAa,CAAChC,IAAD,EAAOkC,GAAP,kBACX;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAElC,IAAI,CAAC+B,KADd;AAEE,YAAA,OAAO,EAAE/B,IAAI,CAACL,KAFhB;AAGE,YAAA,aAAa,EAAEiB;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF,WAAW,GAAEsB,GAAI,IAAGlC,IAAI,CAAC+B,KAAM,EAA/B;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAcE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAM1B,iBAAiB,CAAC,CAACD,cAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GAzIQZ,G;;KAAAA,G;AA2IT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Bookshelf from \"./components/Bookshelf\";\r\nimport Book from \"./components/Book\";\r\nimport * as BookAPI from \"./BooksAPI\";\r\n\r\n/**\r\n * #When?\r\n * - when selecting a shelf\r\n *\r\n * #How?\r\n * MoveBook\r\n * 1- take book from one shelf (delete)\r\n * 2- move it to another shelf (append/push)\r\n * ---------------------\r\n * variables:\r\n * - book (?)\r\n * - current shelf\r\n * - new shelf\r\n * --------------------\r\n * code:\r\n * 1- read variables [/]\r\n * 1- push in the new shelf\r\n *\r\n *\r\n * --------------------\r\n * setup\r\n *   const changeShelf = () => {};\r\n */\r\n\r\nfunction App() {\r\n  // read state => variable\r\n  const ar = [\r\n    { name: \"ahmed\", array: [5, 6, 8, 9] },\r\n    { name: \"mhmd\", array: [5, 6, 8, 9] },\r\n    { name: \"eid\", array: [5, 6, 8, 9] },\r\n    { name: \"ali\", array: [5, 6, 8, 9] },\r\n  ]; // replace with state\r\n  // console.log(\"before\")\r\n  // console.log(ar)\r\n  setTimeout(() => {\r\n    console.log(\r\n      ar\r\n        .find((item) => {\r\n          return item.name === \"mhmd\";\r\n        })\r\n        .array.push(10)\r\n    );\r\n    // console.log(\"after\")\r\n    // console.log(ar)\r\n  }, 3000);\r\n  // set state => variable => ar\r\n\r\n  const [bookshelf, setbookshelf] = useState([]);\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n  const [shelfArr, setshelfArr] = useState([]);\r\n  const [searchArr, setSearchArr] = useState([]);\r\n\r\n  const [fetch, setFetch] = useState(true);\r\n\r\n  const changeShelf = () => {\r\n    setFetch(true);\r\n  };\r\n\r\n  function handleChange(e) {\r\n    const inputValu =  e.target.value\r\n    \r\n    BookAPI.search(inputValu,30).then((books) => {\r\n  \r\n  \r\n  \r\n    });\r\n  }\r\n\r\n\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    /**\r\n     * if fetch is required\r\n     */\r\n    // run something in the lifecycle\r\n    if (fetch) {\r\n      BookAPI.getAll().then((books) => {\r\n        // books\r\n        // inside this => access books\r\n        setbookshelf(books);\r\n        // console.log(books[0].shelf);\r\n        bookArrRefactor(books);\r\n        setFetch(false);\r\n      });\r\n    }\r\n  }, [fetch]);\r\n\r\n  const bookArrRefactor = (booksArray) => {\r\n    const array1 = [];\r\n    const array2 = [];\r\n    const array3 = [];\r\n\r\n    booksArray.forEach(dist);\r\n    function dist(item) {\r\n      const shelf = item.shelf;\r\n      // console.log(shelf);\r\n      if (shelf === \"currentlyReading\") {\r\n        array1.push(item);\r\n      } else if (shelf === \"wantToRead\") {\r\n        array2.push(item);\r\n      } else {\r\n        array3.push(item);\r\n      }\r\n    }\r\n    const newShelfArr = [\r\n      { title: \"Currently Reading\", array: array1 },\r\n      { title: \"Want to Read\", array: array2 },\r\n      { title: \"Read\", array: array3 },\r\n    ];\r\n    setshelfArr(newShelfArr);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n              {searchArr.map((shelf) => {\r\n                return (<i><Book/></i>)})}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <Header title=\"My Reads\" />\r\n          <div className=\"list-books-content\">\r\n            {shelfArr.length > 0 &&\r\n              shelfArr.map((item, idx) => (\r\n                <div key={`${idx}-${item.title}`}>\r\n                  <Bookshelf\r\n                    title={item.title}\r\n                    bookArr={item.array}\r\n                    onChangeShelf={changeShelf}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}