{"ast":null,"code":"var _jsxFileName = \"E:\\\\React FWD\\\\React Fundamentals\\\\react-bookstore\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Bookshelf from \"./components/Bookshelf\";\nimport * as BookAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dumObj = {\n  title: \"The Linux Command Line\",\n  subtitle: \"A Complete Introduction\",\n  authors: [],\n  publisher: \"No Starch Press\",\n  publishedDate: \"2012\",\n  description: \"You've experienced the shiny, point-and-click surface of your Linux computer—now dive below and explore its depths with the power of the command line. The Linux Command Line takes you from your very first terminal keystrokes to writing full programs in Bash, the most popular Linux shell. Along the way you'll learn the timeless skills handed down by generations of gray-bearded, mouse-shunning gurus: file navigation, environment configuration, command chaining, pattern matching with regular expressions, and more. In addition to that practical knowledge, author William Shotts reveals the philosophy behind these tools and the rich heritage that your desktop Linux machine has inherited from Unix supercomputers of yore. As you make your way through the book's short, easily-digestible chapters, you'll learn how to: * Create and delete files, directories, and symlinks * Administer your system, including networking, package installation, and process management * Use standard input and output, redirection, and pipelines * Edit files with Vi, the world’s most popular text editor * Write shell scripts to automate common or boring tasks * Slice and dice text files with cut, paste, grep, patch, and sed Once you overcome your initial \\\"shell shock,\\\" you'll find that the command line is a natural and expressive way to communicate with your computer. Just don't be surprised if your mouse starts to gather dust. A featured resource in the Linux Foundation's \\\"Evolution of a SysAdmin\\\"\",\n  industryIdentifiers: [],\n  readingModes: {\n    text: true,\n    image: false\n  },\n  pageCount: 480,\n  printType: \"BOOK\",\n  categories: [\"COMPUTERS\"],\n  averageRating: 4,\n  ratingsCount: 2,\n  maturityRating: \"NOT_MATURE\",\n  allowAnonLogging: true,\n  contentVersion: \"1.2.2.0.preview.2\",\n  panelizationSummary: {\n    containsEpubBubbles: false,\n    containsImageBubbles: false\n  },\n  imageLinks: {\n    smallThumbnail: \"http://books.google.com/books/content?id=nggnmAEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api\",\n    thumbnail: \"http://books.google.com/books/content?id=nggnmAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api\"\n  },\n  language: \"en\",\n  previewLink: \"http://books.google.com/books?id=nggnmAEACAAJ&dq=linux&hl=&cd=3&source=gbs_api\",\n  infoLink: \"https://play.google.com/store/books/details?id=nggnmAEACAAJ&source=gbs_api\",\n  canonicalVolumeLink: \"https://market.android.com/details?id=book-nggnmAEACAAJ\",\n  id: \"nggnmAEACAAJ\",\n  shelf: \"currentlyReading\"\n};\n\nfunction App() {\n  _s();\n\n  // hooks\n  // const [ state , changeState ] = useState( initialValue )\n  // we use state in the component \n  const [bookshelf, setbookshelf] = useState([]);\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [shelfArr, setshelfArr] = useState([]);\n  /**\r\n   * 1- array1\r\n   * 2- array2\r\n   * 3- array3\r\n   * 4- shelf array \r\n  **/\n  // custom fn\n  // put books array in bookshelf state\n  // useEffect\n\n  useEffect(() => {\n    // run something in the lifecycle\n    BookAPI.getAll().then(books => {\n      // books\n      // inside this => access books \n      setbookshelf(books);\n      console.log(books[0].shelf);\n      bookArrRefactor(books);\n    });\n  }, []);\n\n  const bookArrRefactor = booksArray => {\n    // separate them to 3 states\n    // then collect in the new array\n    // console.log(books[0]);\n    const array1 = [];\n    const array2 = [];\n    const array3 = [];\n    booksArray.forEach(dist);\n\n    function dist(item) {\n      const shelf = item.shelf;\n      console.log(shelf);\n\n      if (shelf === \"currentlyReading\") {\n        array1.push(item);\n      } else if (shelf === \"wantToRead\") {\n        array2.push(item);\n      } else {\n        array3.push(item);\n      }\n\n      ;\n      const newShelfArr = [{\n        title: \"Currently Reading\",\n        array: array1\n      }, {\n        title: \"Want to Read\",\n        array: array2\n      }, {\n        title: \"Read\",\n        array: array3\n      }];\n    }\n\n    console.log(array1);\n    console.log(array2);\n    console.log(array3);\n    setshelfArr(newShelfArr);\n    console.log(booksArray);\n    /*\r\n     * 1-loop on booksArray\r\n     * 2-check the value of every item in this array\r\n     * 3-\r\n     */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"My Reads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: bookshelf.length > 0 && bookshelf.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"\",\n            bookArr: []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)\n        }, `${idx}-${item.title}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ne8lRZ3vHVnKmVhE65JcZGgz6jA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React FWD/React Fundamentals/react-bookstore/src/App.js"],"names":["useEffect","useState","Header","Bookshelf","BookAPI","dumObj","title","subtitle","authors","publisher","publishedDate","description","industryIdentifiers","readingModes","text","image","pageCount","printType","categories","averageRating","ratingsCount","maturityRating","allowAnonLogging","contentVersion","panelizationSummary","containsEpubBubbles","containsImageBubbles","imageLinks","smallThumbnail","thumbnail","language","previewLink","infoLink","canonicalVolumeLink","id","shelf","App","bookshelf","setbookshelf","showSearchPage","setShowSearchpage","shelfArr","setshelfArr","getAll","then","books","console","log","bookArrRefactor","booksArray","array1","array2","array3","forEach","dist","item","push","newShelfArr","array","length","map","idx"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Bookshelf from \"./components/Bookshelf\";\r\nimport * as BookAPI from \"./BooksAPI\";\r\n\r\nconst dumObj = {\r\n  title: \"The Linux Command Line\",\r\n  subtitle: \"A Complete Introduction\",\r\n  authors: [],\r\n  publisher: \"No Starch Press\",\r\n  publishedDate: \"2012\",\r\n  description:\r\n    \"You've experienced the shiny, point-and-click surface of your Linux computer—now dive below and explore its depths with the power of the command line. The Linux Command Line takes you from your very first terminal keystrokes to writing full programs in Bash, the most popular Linux shell. Along the way you'll learn the timeless skills handed down by generations of gray-bearded, mouse-shunning gurus: file navigation, environment configuration, command chaining, pattern matching with regular expressions, and more. In addition to that practical knowledge, author William Shotts reveals the philosophy behind these tools and the rich heritage that your desktop Linux machine has inherited from Unix supercomputers of yore. As you make your way through the book's short, easily-digestible chapters, you'll learn how to: * Create and delete files, directories, and symlinks * Administer your system, including networking, package installation, and process management * Use standard input and output, redirection, and pipelines * Edit files with Vi, the world’s most popular text editor * Write shell scripts to automate common or boring tasks * Slice and dice text files with cut, paste, grep, patch, and sed Once you overcome your initial \\\"shell shock,\\\" you'll find that the command line is a natural and expressive way to communicate with your computer. Just don't be surprised if your mouse starts to gather dust. A featured resource in the Linux Foundation's \\\"Evolution of a SysAdmin\\\"\",\r\n  industryIdentifiers: [],\r\n  readingModes: {\r\n    text: true,\r\n    image: false,\r\n  },\r\n    pageCount: 480,\r\n    printType: \"BOOK\",\r\n    categories: [\"COMPUTERS\"],\r\n    averageRating: 4,\r\n    ratingsCount: 2,\r\n    maturityRating: \"NOT_MATURE\",\r\n    allowAnonLogging: true,\r\n    contentVersion: \"1.2.2.0.preview.2\",\r\n    panelizationSummary: {\r\n    containsEpubBubbles: false,\r\n    containsImageBubbles: false,\r\n  },\r\n  imageLinks: {\r\n    smallThumbnail:\r\n      \"http://books.google.com/books/content?id=nggnmAEACAAJ&printsec=frontcover&img=1&zoom=5&source=gbs_api\",\r\n    thumbnail:\r\n      \"http://books.google.com/books/content?id=nggnmAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api\",\r\n  },\r\n  language: \"en\",\r\n  previewLink:\r\n    \"http://books.google.com/books?id=nggnmAEACAAJ&dq=linux&hl=&cd=3&source=gbs_api\",\r\n  infoLink:\r\n    \"https://play.google.com/store/books/details?id=nggnmAEACAAJ&source=gbs_api\",\r\n  canonicalVolumeLink:\r\n    \"https://market.android.com/details?id=book-nggnmAEACAAJ\",\r\n  id: \"nggnmAEACAAJ\",\r\n  shelf: \"currentlyReading\",\r\n};\r\nfunction App() {\r\n// hooks\r\n// const [ state , changeState ] = useState( initialValue )\r\n// we use state in the component \r\n\r\n\r\nconst [bookshelf,setbookshelf] = useState([])\r\nconst [showSearchPage, setShowSearchpage] = useState(false);\r\nconst [shelfArr, setshelfArr] = useState([]); \r\n/**\r\n * 1- array1\r\n * 2- array2\r\n * 3- array3\r\n * 4- shelf array \r\n**/\r\n\r\n\r\n// custom fn\r\n// put books array in bookshelf state\r\n \r\n\r\n// useEffect\r\nuseEffect(() => {\r\n// run something in the lifecycle\r\n  BookAPI.getAll()\r\n  .then((books) => {\r\n    // books\r\n    // inside this => access books \r\n    setbookshelf(books)\r\n    console.log(books[0].shelf);\r\n    bookArrRefactor(books)\r\n  });\r\n},[]);\r\n\r\n\r\nconst bookArrRefactor =  (booksArray) => {\r\n  // separate them to 3 states\r\n  // then collect in the new array\r\n\r\n  // console.log(books[0]);\r\n\r\n  const array1 = [];\r\n  const array2 = [];\r\n  const array3 = [];\r\n  \r\n\r\n  booksArray.forEach(dist);\r\n    function dist(item) {\r\n      const shelf = item.shelf\r\n\r\n      console.log(shelf);\r\n\r\n      if (shelf===\"currentlyReading\") {\r\n        array1.push(item);\r\n      } else if (shelf===\"wantToRead\") {\r\n        array2.push(item);\r\n      } else {\r\n        array3.push(item);\r\n      }\r\n      ;\r\n      const newShelfArr = [\r\n        { title: \"Currently Reading\", array: array1 },\r\n        { title: \"Want to Read\", array: array2 },\r\n        { title: \"Read\", array: array3 },\r\n      ];\r\n    }\r\n    console.log(array1);\r\n    console.log(array2);\r\n    console.log(array3);\r\n    setshelfArr(newShelfArr);\r\n    console.log(booksArray);\r\n  /*\r\n   * 1-loop on booksArray\r\n   * 2-check the value of every item in this array\r\n   * 3-\r\n   */\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\"></ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <Header title=\"My Reads\" />\r\n          <div className=\"list-books-content\">\r\n            {bookshelf.length>0 && bookshelf.map((item, idx) => (\r\n              <div key={`${idx}-${item.title}`}>\r\n                <Bookshelf title={\"\"} bookArr={[]} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}