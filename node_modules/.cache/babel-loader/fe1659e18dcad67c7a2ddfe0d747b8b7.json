{"ast":null,"code":"var _jsxFileName = \"E:\\\\React FWD\\\\React Fundamentals\\\\react-bookstore\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Bookshelf from \"./components/Bookshelf\";\nimport * as BookAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // hooks\n  // const [ state , changeState ] = useState( initialValue )\n  // we use state in the component \n  const [bookshelf, setbookshelf] = useState([]);\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [shelfArr, setshelfArr] = useState([]);\n  /**\r\n   * 1- array1\r\n   * 2- array2\r\n   * 3- array3\r\n   * 4- shelf array \r\n  **/\n  // custom fn\n  // put books array in bookshelf state\n  // useEffect\n\n  useEffect(() => {\n    // run something in the lifecycle\n    BookAPI.getAll().then(books => {\n      // books\n      // inside this => access books \n      setbookshelf(books);\n      console.log(books[0].shelf);\n      bookArrRefactor(books);\n    });\n  }, []);\n\n  const bookArrRefactor = booksArray => {\n    // separate them to 3 states\n    // then collect in the new array\n    // console.log(books[0]);\n    const array1 = [];\n    const array2 = [];\n    const array3 = [];\n    booksArray.forEach(dist);\n\n    function dist(item) {\n      const shelf = item.shelf;\n      console.log(shelf);\n\n      if (shelf === \"currentlyReading\") {\n        array1.push(item);\n      } else if (shelf === \"wantToRead\") {\n        array2.push(item);\n      } else {\n        array3.push(item);\n      }\n\n      ;\n    }\n\n    const newShelfArr = [{\n      title: \"Currently Reading\",\n      array: array1\n    }, {\n      title: \"Want to Read\",\n      array: array2\n    }, {\n      title: \"Read\",\n      array: array3\n    }];\n    setshelfArr(newShelfArr);\n    console.log(booksArray);\n    console.log(newShelfArr);\n    /*\r\n     * 1-loop on booksArray\r\n     * 2-check the value of every item in this array\r\n     * 3-\r\n     */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"My Reads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: shelfArr.length > 0 && shelfArr.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: item.title,\n            bookArr: item.array\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, `${idx}-${item.title}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ne8lRZ3vHVnKmVhE65JcZGgz6jA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React FWD/React Fundamentals/react-bookstore/src/App.js"],"names":["useEffect","useState","Header","Bookshelf","BookAPI","App","bookshelf","setbookshelf","showSearchPage","setShowSearchpage","shelfArr","setshelfArr","getAll","then","books","console","log","shelf","bookArrRefactor","booksArray","array1","array2","array3","forEach","dist","item","push","newShelfArr","title","array","length","map","idx"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Bookshelf from \"./components/Bookshelf\";\r\nimport * as BookAPI from \"./BooksAPI\";\r\n\r\nfunction App() {\r\n// hooks\r\n// const [ state , changeState ] = useState( initialValue )\r\n// we use state in the component \r\n\r\n\r\nconst [bookshelf,setbookshelf] = useState([])\r\nconst [showSearchPage, setShowSearchpage] = useState(false);\r\nconst [shelfArr, setshelfArr] = useState([]); \r\n/**\r\n * 1- array1\r\n * 2- array2\r\n * 3- array3\r\n * 4- shelf array \r\n**/\r\n\r\n\r\n// custom fn\r\n// put books array in bookshelf state\r\n\r\n// useEffect\r\nuseEffect(() => {\r\n// run something in the lifecycle\r\n  BookAPI.getAll()\r\n  .then((books) => {\r\n    // books\r\n    // inside this => access books \r\n    setbookshelf(books)\r\n    console.log(books[0].shelf);\r\n    bookArrRefactor(books)\r\n  });\r\n},[]);\r\n\r\n\r\nconst bookArrRefactor =  (booksArray) => {\r\n  // separate them to 3 states\r\n  // then collect in the new array\r\n\r\n  // console.log(books[0]);\r\n\r\n  const array1 = [];\r\n  const array2 = [];\r\n  const array3 = [];\r\n  \r\n\r\n  booksArray.forEach(dist);\r\n    function dist(item) {\r\n      const shelf = item.shelf\r\n      console.log(shelf);\r\n      if (shelf===\"currentlyReading\") {\r\n        array1.push(item);\r\n      } else if (shelf===\"wantToRead\") {\r\n        array2.push(item);\r\n      } else {\r\n        array3.push(item);\r\n      }\r\n      ;\r\n    }\r\n    const newShelfArr = [\r\n      { title: \"Currently Reading\", array: array1 },\r\n      { title: \"Want to Read\", array: array2 },\r\n      { title: \"Read\", array: array3 },\r\n    ];\r\n    setshelfArr(newShelfArr);\r\n    console.log(booksArray);\r\n    console.log(newShelfArr);\r\n  /*\r\n   * 1-loop on booksArray\r\n   * 2-check the value of every item in this array\r\n   * 3-\r\n   */\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {showSearchPage ? (\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <a\r\n              className=\"close-search\"\r\n              onClick={() => setShowSearchpage(!showSearchPage)}\r\n            >\r\n              Close\r\n            </a>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\"></ol>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-books\">\r\n          <Header title=\"My Reads\" />\r\n          <div className=\"list-books-content\">\r\n            {shelfArr.length>0 && shelfArr.map((item, idx) => (\r\n              <div key={`${idx}-${item.title}`}>\r\n                <Bookshelf title={item.title} bookArr={item.array} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}